_require local "../../../basis.smi"
_require "./FormatExpression.smi"
(* _require local "./FORMAT_EXPRESSION.sig" *)
_require local "./AssocResolver.smi"
_require local "./PrettyPrinter.smi"
_require "./PrinterParameter.smi"
(* _require local "./PRINTER_PARAMETER.sig" *)
_require local "./Truncator.smi"
_require local "./PreProcessor.smi"
_require "./BasicFormatters.smi"
(* _require local "./BASIC_FORMATTERS.sig" *)
(* _require local "./SMLFORMAT.sig" *)
_require local "./PrettyPrinter2.smi"

structure SMLFormat = 
struct
  structure FormatExpression = FormatExpression
  structure PrinterParameter = PrinterParameter
  structure BasicFormatters = BasicFormatters
  datatype parameter = datatype PrinterParameter.parameter
  exception Fail of string
  type format = FormatExpression.expression list
  val traceLevel : int ref
  val prettyPrint : parameter list -> format -> string
end
